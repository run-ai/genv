#!/bin/bash

set -e
[ -n "$GENV_DEBUG" ] && set -x

if [[ $1 = "--description" ]] ; then
  echo "Deactivate environment"
  exit 0
fi

if [ -z "$GENV_ENVIRONMENT_ID" ] ; then
  echo "Not running in an active environment" 1>&2
  exit 1
fi

function deactivation()
{
  cat <<EOS
( exec genv exec envs deactivate --pid \$\$ )

# clean up devices.json in case this environment
# had attached devices and this is the last terminal
# from the environment
( exec genv exec devices )
EOS
}

function functions()
{
  cat <<EOS
_genv_unset_envs()
{
  if [ "$GENV_SHELL" = "zsh" ]; then
    names=("\${(@s/:/)GENV_ENVS}")
  else
    IFS=: read -a names <<< "\$GENV_ENVS"
  fi

  unset GENV_ENVS

  for name in "\${names[@]}"
  do
    unset \$name
  done
}

_genv_restore_envs()
{
  if [ "$GENV_SHELL" = "zsh" ]; then
    names=("\${(@s/:/)GENV_BACKUP_ENVS}")
  else
    IFS=: read -a names <<< "\$GENV_BACKUP_ENVS"
  fi

  unset GENV_BACKUP_ENVS

  for name in "\${names[@]}"
  do
    _genv_restore_env \$name
  done
}
EOS
}

function restore()
{
  cat <<EOS
_genv_unset_envs
_genv_restore_envs
EOS
}

function cleanup()
{
  cat <<EOS
unset -f _genv_restore_envs
unset -f _genv_unset_envs
unset -f _genv_replace_env
unset -f _genv_restore_env
unset -f _genv_backup_env
unset -f _genv_unset_env
unset -f _genv_set_env
unset -f _genv_append_to_env
unset -f _genv_get_env
EOS
}

deactivation
functions
restore
cleanup
